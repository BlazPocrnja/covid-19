{"version":3,"sources":["globeChart.js","growthLineChart.js","confirmedAreaChart.js","App.js","myMath.js","serviceWorker.js","index.js"],"names":["am4core","am4themes_animated","am4themes_spiritedaway","GlobeChart","props","data","onCountryClick","useState","polygonSeriesState","setPolygonSeries","covidSeriesState","setCovidSeries","useEffect","chart","am4maps","geodata","am4geodata_worldLow","e","raiseCriticalError","Error","label","createChild","text","fontSize","align","valign","background","cornerRadius","padding","marginLeft","marginBottom","strokeOpacity","fillOpacity","dataSource","url","urlTarget","marginTop","gitSource","icon","path","marginRight","tooltipText","projection","Orthographic","panBehavior","zoomControl","homeButton","events","on","goHome","width","parent","insertBefore","plusButton","backgroundSeries","mapPolygons","template","polygon","fill","deltaLongitude","deltaLatitude","adapter","add","fitToRange","polygonSeries","series","push","useGeodata","calculateVisualCenter","tooltip","nonScalingStroke","stroke","propertyFields","id","tooltipPosition","event","target","dummyData","isHover","dataItem","dataContext","name","hs","states","create","properties","colors","getIndex","brighten","graticuleSeries","mapLines","fitExtent","covidSeries","autoTextColor","dy","covidTemplate","split","hs2","each","mapPolygon","count","country","length","confirmed","multiPolygon","visualLongitude","visualLatitude","Math","max","log","LN10","style","height","backgroundColor","GrowthLineChart","trendLine","handleBrushChange","startIndex","setStartIndex","endIndex","setEndIndex","mergedData","setMergedData","map","d","trend","find","t","date","value","undefined","margin","top","right","left","bottom","dataKey","offset","position","tickFormatter","x","Date","toLocaleDateString","angle","strokeDasharray","labelFormatter","type","onChange","ConfirmedAreaChart","estimatedData","yAxisLabel","x1","y1","x2","y2","stopColor","stopOpacity","Content","Layout","Sider","Title","Typography","App","setData","tableData","setTableData","growthData","setGrowthData","growthTrend","setGrowthTrend","totalData","setTotalData","estimatedTotal","setEstimatedTotal","dailyCases","setDailyCases","estimatedDailyCases","setEstimatedDailyCases","selectedCountry","setSelectedCountry","searchText","setSearchText","fetch","then","response","json","fixedData","key","i","currDate","getTime","prevNewCases","currNewCases","growthRate","debounce","x_values","y_values","lr","values_x","values_y","n","sum_x","sum_y","sum_xy","sum_xx","sum_yy","slope","pow","sqrt","linearRegression","estimate","intercept","selectedData","currentDate","newCases","totalCases","nextDate","setDate","getDate","getColumnSearchProps","dataIndex","placeholder","searchInput","handleSearch","selectedKeys","confirm","handleReset","clearFilters","filterDropdown","setSelectedKeys","ref","node","onPressEnter","display","onClick","SearchOutlined","size","filterIcon","filtered","color","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","highlightStyle","searchWords","autoEscape","textToHighlight","columns","title","sorter","a","b","localeCompare","defaultSortOrder","deaths","recovered","bodyStyle","overflow","centered","footer","onCancel","span","level","textAlign","theme","pagination","scroll","y","onRow","rowIndex","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dcfa0af8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport am4themes_spiritedaway from \"@amcharts/amcharts4/themes/spiritedaway\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\nam4core.useTheme(am4themes_spiritedaway);\r\n\r\nconst GlobeChart = (props) => {\r\n\tconst { data, onCountryClick } = props\r\n\tconst [polygonSeriesState, setPolygonSeries] = useState()\r\n\tconst [covidSeriesState, setCovidSeries] = useState()\r\n\r\n\tuseEffect(() => {\r\n\t\tlet chart = am4core.create(\"globechartdiv\", am4maps.MapChart);\r\n\r\n\t\ttry {\r\n\t\t\t\tchart.geodata = am4geodata_worldLow;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t\tchart.raiseCriticalError(new Error(\"Map geodata could not be loaded. Please download the latest <a href=\\\"https://www.amcharts.com/download/download-v4/\\\">amcharts geodata</a> and extract its contents into the same directory as your amCharts files.\"));\r\n\t\t}\r\n\r\n\r\n\t\tlet label = chart.createChild(am4core.Label)\r\n\t\tlabel.text = \"Select a country to view statistics.\";\r\n\t\tlabel.fontSize = 12;\r\n\t\tlabel.align = \"left\";\r\n\t\tlabel.valign = \"bottom\"\r\n\t\tlabel.background = new am4core.RoundedRectangle()\r\n\t\tlabel.background.cornerRadius(10,10,10,10);\r\n\t\tlabel.padding(10,10,10,10);\r\n\t\tlabel.marginLeft = 30;\r\n\t\tlabel.marginBottom = 30;\r\n\t\tlabel.background.strokeOpacity = 0.3;\r\n\t\tlabel.background.fillOpacity = 0.6;\r\n\r\n\t\tlet dataSource = chart.createChild(am4core.TextLink)\r\n\t\tdataSource.text = \"Data source: github.com/pomber/covid19\";\r\n\t\tdataSource.fontSize = 12;\r\n\t\tdataSource.align = \"left\";\r\n\t\tdataSource.valign = \"top\"\r\n\t\tdataSource.url = \"https://github.com/pomber/covid19\"\r\n\t\tdataSource.urlTarget = \"_blank\";\r\n\t\tdataSource.padding(10,10,10,10);\r\n\t\tdataSource.marginLeft = 30;\r\n\t\tdataSource.marginTop = 30;\r\n\r\n\t\tlet gitSource = chart.createChild(am4core.Button)\r\n\t\tgitSource.icon = new am4core.Sprite();\r\n\t\tgitSource.icon.path = \"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\";\r\n\t\tgitSource.fontSize = 12;\r\n\t\tgitSource.align = \"right\";\r\n\t\tgitSource.valign = \"top\"\r\n\t\tgitSource.url = \"https://github.com/blazpocrnja/covid-19\"\r\n\t\tgitSource.urlTarget = \"_blank\";\r\n\t\tgitSource.padding(10,10,10,10);\r\n\t\tgitSource.marginRight = 30;\r\n\t\tgitSource.marginTop = 30;\r\n\t\tgitSource.tooltipText = \"View source code\"\r\n\r\n\t\t// Set projection\r\n\t\tchart.projection = new am4maps.projections.Orthographic();\r\n\t\tchart.panBehavior = \"rotateLongLat\";\r\n\t\tchart.padding(20,20,20,20);\r\n\r\n\t\t// Add zoom control\r\n\t\tchart.zoomControl = new am4maps.ZoomControl();\r\n\r\n\t\tlet homeButton = new am4core.Button();\r\n\t\thomeButton.events.on(\"hit\", function(){\r\n\t\t\tchart.goHome();\r\n\t\t});\r\n\r\n\t\thomeButton.icon = new am4core.Sprite();\r\n\t\thomeButton.padding(7, 5, 7, 5);\r\n\t\thomeButton.width = 30;\r\n\t\thomeButton.icon.path = \"M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8\";\r\n\t\thomeButton.marginBottom = 10;\r\n\t\thomeButton.parent = chart.zoomControl;\r\n\t\thomeButton.insertBefore(chart.zoomControl.plusButton);\r\n\r\n\t\tchart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t\tchart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#ffffff\");\r\n\t\tchart.deltaLongitude = 20;\r\n\t\tchart.deltaLatitude = -20;\r\n\r\n\t\t// limits vertical rotation\r\n\t\tchart.adapter.add(\"deltaLatitude\", function(deltaLatitude){\r\n\t\t\t\treturn am4core.math.fitToRange(deltaLatitude, -90, 90);\r\n\t\t})\r\n\r\n\t\t// Create map polygon series\r\n\t\tlet polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\t\tpolygonSeries.useGeodata = true;\r\n\r\n\t\tpolygonSeries.calculateVisualCenter = true;\r\n\t\tpolygonSeries.tooltip.background.fill = am4core.color(\"#47c78a\");\r\n\t\tpolygonSeries.tooltip.background.fillOpacity = 0.8;\r\n\t\tpolygonSeries.tooltip.background.cornerRadius = 20;\r\n\r\n\t\tlet template = polygonSeries.mapPolygons.template;\r\n\t\ttemplate.nonScalingStroke = true;\r\n\t\ttemplate.fill = am4core.color(\"#47c78a\");\r\n\t\ttemplate.stroke = am4core.color(\"#454a58\");\r\n\r\n\t\tpolygonSeries.calculateVisualCenter = true;\r\n\t\ttemplate.propertyFields.id = \"id\";\r\n\t\ttemplate.tooltipPosition = \"fixed\";\r\n\t\ttemplate.fillOpacity = 1;\r\n\r\n\t\ttemplate.events.on(\"over\", function (event) {\r\n\t\t\tif (event.target.dummyData) {\r\n\t\t\t\tevent.target.dummyData.isHover = true;\r\n\t\t\t}\r\n\t\t})\r\n\t\ttemplate.events.on(\"out\", function (event) {\r\n\t\t\tif (event.target.dummyData) {\r\n\t\t\t\tevent.target.dummyData.isHover = false;\r\n\t\t\t}\r\n\t\t})\r\n\t\ttemplate.events.on(\"hit\", function (event) {\r\n\t\t\tonCountryClick(event.target.dataItem.dataContext.name)\r\n\t\t})\r\n\r\n\t\tlet hs = polygonSeries.mapPolygons.template.states.create(\"hover\");\r\n\t\ths.properties.fillOpacity = 1;\r\n\t\ths.properties.fill = chart.colors.getIndex(0).brighten(-0.5)\r\n\r\n\r\n\t\tlet graticuleSeries = chart.series.push(new am4maps.GraticuleSeries());\r\n\t\tgraticuleSeries.mapLines.template.stroke = am4core.color(\"#fff\");\r\n\t\tgraticuleSeries.fitExtent = false;\r\n\t\tgraticuleSeries.mapLines.template.strokeOpacity = 0.2;\r\n\t\tgraticuleSeries.mapLines.template.stroke = am4core.color(\"#fff\");\r\n\r\n\r\n\t\tlet covidSeries = chart.series.push(new am4maps.MapPolygonSeries())\r\n\t\tcovidSeries.tooltip.background.fillOpacity = 0.8;\r\n\t\tcovidSeries.tooltip.background.cornerRadius = 20;\r\n\t\tcovidSeries.tooltip.autoTextColor = false;\r\n\t\tcovidSeries.tooltip.label.fill = am4core.color(\"#000\");\r\n\t\tcovidSeries.tooltip.dy = -5;\r\n\r\n\t\tlet covidTemplate = covidSeries.mapPolygons.template;\r\n\t\tcovidTemplate.fill = am4core.color(\"#bf7569\");\r\n\t\tcovidTemplate.strokeOpacity = 0;\r\n\t\tcovidTemplate.fillOpacity = 0.75;\r\n\t\tcovidTemplate.tooltipPosition = \"fixed\";\r\n\t\tcovidTemplate.events.on(\"hit\", function (event) {\r\n\t\t\tonCountryClick(event.target.tooltipText.split(\":\")[0])\r\n\t\t})\r\n\r\n\t\tlet hs2 = covidSeries.mapPolygons.template.states.create(\"hover\");\r\n\t\ths2.properties.fillOpacity = 1;\r\n\t\ths2.properties.fill = am4core.color(\"#86240c\");\r\n\r\n\t\tsetPolygonSeries(polygonSeries)\r\n\t\tsetCovidSeries(covidSeries)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (polygonSeriesState) {\r\n\t\t\tpolygonSeriesState.mapPolygons.each(function (mapPolygon) {\r\n\t\t\t\tlet count = 0\r\n\t\t\t\tlet country = data[mapPolygon.dataItem.dataContext.name]\r\n\t\t\t\tif (country && country.length) count = country[country.length - 1].confirmed;\r\n\t\t\t\r\n\t\t\t\tif (count > 0) {\r\n\t\t\t\t\tlet polygon = covidSeriesState.mapPolygons.create();\r\n\t\t\t\t\tpolygon.multiPolygon = am4maps.getCircle(mapPolygon.visualLongitude, mapPolygon.visualLatitude, Math.max(0.2, Math.log(count) * Math.LN10 / 10));\r\n\t\t\t\t\tpolygon.tooltipText = mapPolygon.dataItem.dataContext.name + \": \" + count;\r\n\t\t\t\t\tmapPolygon.dummyData = polygon;\r\n\t\t\t\t\tpolygon.events.on(\"over\", function () {\r\n\t\t\t\t\t\tmapPolygon.isHover = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\tpolygon.events.on(\"out\", function () {\r\n\t\t\t\t\t\tmapPolygon.isHover = false;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmapPolygon.tooltipText = mapPolygon.dataItem.dataContext.name + \": no data\";\r\n\t\t\t\t\tmapPolygon.fillOpacity = 0.9;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [data])\r\n\t\r\n\treturn (\r\n\t\t<div id=\"globechartdiv\" style={{ width: \"100%\", height: \"100%\", backgroundColor: \"#454a58\"}}/>\r\n\t)\r\n}\r\n\r\nexport default GlobeChart;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Brush,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst GrowthLineChart = (props) => {\r\n  const { data, trendLine, handleBrushChange } = props\r\n  const [startIndex, setStartIndex] = useState()\r\n  const [endIndex, setEndIndex] = useState()\r\n  const [mergedData, setMergedData] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (data.length >= 30) {\r\n      setStartIndex(data.length - 30)\r\n      setEndIndex(data.length - 1)\r\n\r\n      handleBrushChange({startIndex: data.length - 30, endIndex: data.length - 1})\r\n    }\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    setMergedData(data.map(d => ({ ...d, trend: (trendLine.find(t => t.date === d.date) || { value: undefined }).value })))\r\n  }, [data, trendLine])\r\n\r\n  const onBrushChange = e => {\r\n    setStartIndex(e.startIndex)\r\n    setEndIndex(e.endIndex)\r\n    handleBrushChange(e)\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer>\r\n      <LineChart\r\n        data={mergedData}\r\n        margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\r\n      >\r\n        <XAxis\r\n          dataKey=\"date\"\r\n          label={{ value: \"Date\", offset: -80, position: 'insideBottom' }}\r\n          tickFormatter={x => new Date(x).toLocaleDateString()}\r\n        />\r\n        <YAxis\r\n          dataKey=\"value\"\r\n          label={{ value: \"Growth Rate\", angle: -90, position: 'insideLeft' }}\r\n        />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip labelFormatter={t => new Date(t).toLocaleDateString()} />\r\n        <Line\r\n          name=\"Actual\"\r\n          type=\"monotone\" \r\n          dataKey=\"value\" \r\n          stroke=\"#8884d8\"\r\n        />\r\n        <Line\r\n          name=\"Trend\"\r\n          type=\"monotone\" \r\n          dataKey=\"trend\" \r\n          stroke=\"#82ca9d\"\r\n        />\r\n        <Brush\r\n          startIndex={startIndex}\r\n          endIndex={endIndex}\r\n          onChange={onBrushChange}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default GrowthLineChart;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n\tArea,\r\n\tAreaChart,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst ConfirmedAreaChart = (props) => {\r\n\tconst { data, estimatedData, yAxisLabel  } = props\r\n\tconst [mergedData, setMergedData] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedData([...data, ...estimatedData])\r\n\t}, [data, estimatedData])\r\n\r\n  return (\r\n    <ResponsiveContainer>\r\n\t\t\t<AreaChart\r\n\t\t\t\tdata={mergedData}\r\n\t\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n\t\t\t>\r\n\t\t\t\t<defs>\r\n\t\t\t\t\t<linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n\t\t\t\t\t\t<stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n\t\t\t\t\t\t<stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\r\n\t\t\t\t\t</linearGradient>\r\n\t\t\t\t\t<linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n\t\t\t\t\t\t<stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\r\n\t\t\t\t\t\t<stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\r\n\t\t\t\t\t</linearGradient>\r\n\t\t\t\t</defs>\r\n\t\t\t\t<XAxis\r\n          dataKey=\"date\"\r\n          label={{ value: \"Date\", offset: -80, position: 'insideBottom' }}\r\n          tickFormatter={x => new Date(x).toLocaleDateString()}\r\n        />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<Tooltip labelFormatter={t => new Date(t).toLocaleDateString()} />\r\n\t\t\t\t<Area \r\n\t\t\t\t\tname=\"Actual\"\r\n\t\t\t\t\ttype=\"monotone\" \r\n\t\t\t\t\tdataKey=\"value\" \r\n\t\t\t\t\tstroke=\"#8884d8\" \r\n\t\t\t\t\tfillOpacity={1} \r\n\t\t\t\t\tfill=\"url(#colorUv)\" \r\n\t\t\t\t/>\r\n\t\t\t\t<Area\r\n\t\t\t\t\tname=\"Estimate\"\r\n\t\t\t\t\ttype=\"monotone\" \r\n\t\t\t\t\tdataKey=\"estimate\" \r\n\t\t\t\t\tstroke=\"#82ca9d\" \r\n\t\t\t\t\tfillOpacity={1} \r\n\t\t\t\t\tfill=\"url(#colorPv)\"\r\n\t\t\t\t/>\r\n\t\t\t</AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default ConfirmedAreaChart;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { Layout, Table, Input, Button, Modal, Row, Col, Typography } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport GlobeChart from './globeChart';\r\nimport GrowthLineChart from './growthLineChart';\r\nimport ConfirmedAreaChart from './confirmedAreaChart';\r\nimport { linearRegression } from './myMath';\r\nimport { debounce } from 'lodash';\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({})\r\n  const [tableData, setTableData] = useState([])\r\n  const [growthData, setGrowthData] = useState([])\r\n  const [growthTrend, setGrowthTrend] = useState([])\r\n  const [totalData, setTotalData] = useState([])\r\n  const [estimatedTotal, setEstimatedTotal] = useState([])\r\n  const [dailyCases, setDailyCases] = useState([])\r\n  const [estimatedDailyCases, setEstimatedDailyCases] = useState([])\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\")\r\n  const [searchText, setSearchText] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://pomber.github.io/covid19/timeseries.json\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let fixedData = {\r\n          ...data,\r\n          \"United States\": data[\"US\"],\r\n          \"South Korea\": data[\"Korea, South\"]\r\n        }\r\n        delete fixedData[\"US\"]\r\n        delete fixedData[\"Korea, South\"]\r\n        setData(fixedData)\r\n      }\r\n      );\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let tableData = []\r\n    for (let key in data) {\r\n      tableData.push(\r\n        {\r\n          key: key,\r\n          country: key,\r\n          ...data[key][data[key].length - 1]\r\n        }\r\n      )\r\n    }\r\n\r\n    setTableData(tableData)\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry !== \"\") {\r\n      const totalData = []\r\n      const dailyCases = []\r\n      const growthData = []\r\n      for (let i = 0; i < (data[selectedCountry] || []).length; ++i) {\r\n        let currDate = data[selectedCountry][i].date\r\n        totalData.push({ date: new Date(currDate).getTime(), value: data[selectedCountry][i].confirmed })\r\n\r\n        if (i >= 2) {\r\n          let prevNewCases = data[selectedCountry][i - 1].confirmed - data[selectedCountry][i - 2].confirmed\r\n          let currNewCases = data[selectedCountry][i].confirmed - data[selectedCountry][i - 1].confirmed\r\n          let growthRate = prevNewCases === 0 ? 0 : currNewCases / prevNewCases\r\n          growthData.push({ date: new Date(currDate).getTime(), value: growthRate })\r\n          dailyCases.push({ date: new Date(currDate).getTime(), value: currNewCases })\r\n        }\r\n        else growthData.push({ date: new Date(currDate).getTime(), value: 0 })\r\n      }\r\n\r\n      setTotalData(totalData)\r\n      setDailyCases(dailyCases)\r\n      setGrowthData(growthData)\r\n    }\r\n  }, [selectedCountry])\r\n\r\n  const handleBrushChange = debounce(({ startIndex, endIndex }) => {\r\n    const x_values = []\r\n    const y_values = []\r\n    for (let i = startIndex; i <= endIndex; ++i) {\r\n      x_values.push(growthData[i].date)\r\n      y_values.push(growthData[i].value)\r\n    }\r\n\r\n    const lr = linearRegression(x_values, y_values)\r\n\r\n    const growthTrend = []\r\n    for (let i = startIndex; i <= endIndex; ++i) {\r\n      const estimate = Math.max(lr.slope * growthData[i].date + lr.intercept, 0)\r\n      growthTrend.push({date: growthData[i].date, value: estimate})\r\n    }\r\n\r\n    setGrowthTrend(growthTrend)\r\n\r\n    const estimatedTotal = []\r\n    const estimatedDailyCases = []\r\n    const selectedData = data[selectedCountry]\r\n    const currentDate = new Date(selectedData[endIndex].date);\r\n    let newCases = selectedData[endIndex].confirmed - selectedData[endIndex - 1].confirmed\r\n    let totalCases = selectedData[endIndex].confirmed\r\n\r\n    for (let i = 1; i <= 365; ++i) {\r\n      const nextDate = new Date(currentDate)\r\n      nextDate.setDate(nextDate.getDate() + i)\r\n\r\n      const estimatedGrowthRate = Math.max(lr.slope * nextDate.getTime() + lr.intercept, 0)\r\n      newCases = newCases * estimatedGrowthRate\r\n      totalCases += newCases\r\n\r\n      estimatedDailyCases.push({ date: nextDate.getTime(), estimate: newCases })\r\n      estimatedTotal.push({ date: nextDate.getTime(), estimate: totalCases })\r\n    }\r\n\r\n    setEstimatedDailyCases(estimatedDailyCases)\r\n    setEstimatedTotal(estimatedTotal)\r\n  }, 500)\r\n\r\n  const getColumnSearchProps = (dataIndex, placeholder = dataIndex) => {\r\n    let searchInput = undefined\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n      confirm();\r\n      setSearchText(selectedKeys[0])\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n      clearFilters();\r\n      setSearchText(\"\")\r\n    };\r\n\r\n    return ({\r\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={node => {\r\n              searchInput = node;\r\n            }}\r\n            placeholder={`Search ${placeholder}`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90, marginRight: 8 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      ),\r\n      filterIcon: filtered => (\r\n        <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\r\n      ),\r\n      onFilter: (value, record) =>\r\n        record[dataIndex]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(value.toLowerCase()),\r\n      onFilterDropdownVisibleChange: visible => {\r\n        if (visible) {\r\n          setTimeout(() => searchInput.select());\r\n        }\r\n      },\r\n      render: text => (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      )\r\n    });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Country',\r\n      dataIndex: 'country',\r\n      sorter: (a, b) => a.country.localeCompare(b.country),\r\n      ...getColumnSearchProps('country', \"countries\"),\r\n    },\r\n    {\r\n      title: 'Confirmed',\r\n      dataIndex: 'confirmed',\r\n      align: \"right\",\r\n      sorter: (a, b) => a.confirmed - b.confirmed,\r\n      defaultSortOrder: \"descend\",\r\n      ...getColumnSearchProps('confirmed'),\r\n    },\r\n    {\r\n      title: 'Deaths',\r\n      dataIndex: 'deaths',\r\n      align: \"right\",\r\n      sorter: (a, b) => a.deaths - b.deaths,\r\n      ...getColumnSearchProps('deaths'),\r\n    },\r\n    {\r\n      title: 'Recovered',\r\n      dataIndex: 'recovered',\r\n      align: \"right\",\r\n      sorter: (a, b) => a.recovered - b.recovered,\r\n      ...getColumnSearchProps('recovered'),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout style={{ height: \"100vh\", width: \"100vw\" }}>\r\n      <Content>\r\n        <Modal\r\n          bodyStyle={{ height: \"95vh\", overflow: 'auto' }}\r\n          width=\"95vw\"\r\n          centered\r\n          visible={selectedCountry !== \"\"}\r\n          footer={null}\r\n          onCancel={() => setSelectedCountry(\"\")}\r\n        >\r\n          <Row style={{ height: \"4%\" }}>\r\n            <Col span={24}>\r\n              <Title level={4} style={{textAlign: \"center\"}}>\r\n                Daily Growth Factor\r\n              </Title>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ height: \"46%\" }}>\r\n            <Col span={24}>\r\n              <GrowthLineChart\r\n                data={growthData}\r\n                trendLine={growthTrend}\r\n                handleBrushChange={handleBrushChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ height: \"4%\" }}>\r\n            <Col span={12}>\r\n              <Title level={4} style={{textAlign: \"center\"}}>\r\n                Daily Cases\r\n              </Title>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Title level={4} style={{textAlign: \"center\"}}>\r\n                Total Cases\r\n              </Title>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ height: \"46%\" }}>\r\n            <Col span={12}>\r\n              <ConfirmedAreaChart\r\n                data={dailyCases}\r\n                estimatedData={estimatedDailyCases}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <ConfirmedAreaChart\r\n                data={totalData}\r\n                estimatedData={estimatedTotal}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n        <GlobeChart\r\n          data={data}\r\n          onCountryClick={(country) => setSelectedCountry(country)}\r\n        />\r\n      </Content>\r\n      <Sider\r\n        width=\"35%\"\r\n        theme=\"light\"\r\n      >\r\n        <Table\r\n          size=\"small\"\r\n          columns={columns}\r\n          dataSource={tableData}\r\n          pagination={false}\r\n          scroll={{ y: \"calc(100vh - 39px)\" }}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              onClick: () => setSelectedCountry(record.country)\r\n            };\r\n          }}\r\n        />\r\n      </Sider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nfunction linearRegression(values_x, values_y){\r\n\tvar lr = {};\r\n\tvar n = values_y.length;\r\n\tvar sum_x = 0;\r\n\tvar sum_y = 0;\r\n\tvar sum_xy = 0;\r\n\tvar sum_xx = 0;\r\n\tvar sum_yy = 0;\r\n\r\n\tfor (var i = 0; i < values_y.length; i++) {\r\n\r\n\t\t\tsum_x += values_x[i];\r\n\t\t\tsum_y += values_y[i];\r\n\t\t\tsum_xy += (values_x[i]*values_y[i]);\r\n\t\t\tsum_xx += (values_x[i]*values_x[i]);\r\n\t\t\tsum_yy += (values_y[i]*values_y[i]);\r\n\t} \r\n\r\n\tlr['slope'] = (n * sum_xy - sum_x * sum_y) / (n*sum_xx - sum_x * sum_x);\r\n\tlr['intercept'] = (sum_y - lr.slope * sum_x)/n;\r\n\tlr['r2'] = Math.pow((n*sum_xy - sum_x*sum_y)/Math.sqrt((n*sum_xx-sum_x*sum_x)*(n*sum_yy-sum_y*sum_y)),2);\r\n\r\n\treturn lr;\r\n}\r\n\r\nexport { linearRegression }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}